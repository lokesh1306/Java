/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalAdminRole;

import userinterface.SystemAdminWorkArea.*;
import Business.CommunityAdmin.CommunityAdmin;
import Business.Customer.Customer;
import Business.Customer.Patients;
import Business.DeliveryMan.DeliveryMan;
import Business.Doctor.Doctor;
import Business.Restaurant.Restaurant;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Employee.Patient;
import Business.HospitalAdmin.HospitalAdmin;
import Business.Restaurant.Restaurant;
import Business.Role.CommunityAdminRole;
import Business.Role.DoctorRole;
import Business.Role.HospitalAdminRole;
import Business.Role.PatientRole;
import Business.Role.SystemAdminRole;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Nithin Bharadwaj
 */
public class AddDoctor extends javax.swing.JPanel {

    /**
     * Creates new form CreateUser
     */
    JPanel userProcessContainer;
    EcoSystem system;
    
    public AddDoctor(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.system = system;
        this.userProcessContainer = userProcessContainer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        btnGoBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtHospitalName = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        comboRole = new javax.swing.JComboBox();
        txtPassword = new javax.swing.JPasswordField();
        txtPasswordConfirmation = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        CbxCommunity = new javax.swing.JComboBox<>();
        CbxCity = new javax.swing.JComboBox<>();
        lblGender = new javax.swing.JLabel();
        CbxGender = new javax.swing.JComboBox<>();
        txtAge = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGoBack.setText("<< Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });
        add(btnGoBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 500, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create New User");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 19, 299, -1));

        jLabel2.setText("Name :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 62, -1, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 59, 124, -1));

        jLabel3.setText("Username :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 94, -1, -1));
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 94, 124, -1));

        jLabel4.setText("Password :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 138, -1, -1));

        jLabel5.setText("Confirm Password :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 179, -1, -1));

        jLabel6.setText("Role :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(233, 410, -1, -1));

        jLabel7.setText("Hospital Name( only if role is doctor) :");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 445, -1, -1));
        add(txtHospitalName, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 442, 144, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 500, 77, -1));

        comboRole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Doctor" }));
        comboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRoleActionPerformed(evt);
            }
        });
        add(comboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 407, 144, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 135, 144, -1));
        add(txtPasswordConfirmation, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 176, 144, -1));

        jLabel8.setText("House No :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        jLabel9.setText("Phone Number :");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 375, -1, -1));

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 279, 124, -1));
        add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 372, 124, -1));

        jLabel10.setText("Community");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 311, -1, -1));

        jLabel11.setText("City");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 346, -1, -1));

        CbxCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mission Hill", "Jamaica Plain", "Huntington Avenue", "Bolyston" }));
        add(CbxCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 308, -1, -1));

        CbxCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Boston", "New York" }));
        CbxCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxCityActionPerformed(evt);
            }
        });
        add(CbxCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 343, -1, -1));

        lblGender.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        lblGender.setText("Gender:");
        add(lblGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(212, 217, -1, -1));

        CbxGender.setBackground(new java.awt.Color(204, 204, 204));
        CbxGender.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        CbxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Select--", "Female", "Male" }));
        CbxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxGenderActionPerformed(evt);
            }
        });
        add(CbxGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 150, -1));
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, 140, -1));

        jLabel12.setText("Age :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        // TODO add your handling code here:
        this.userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        Component[] comps = this.userProcessContainer.getComponents();
        for(Component comp : comps){
            if(comp instanceof SystemAdminWorkAreaJPanel){
                SystemAdminWorkAreaJPanel systemAdminWorkAreaJPanel= (SystemAdminWorkAreaJPanel) comp;
                systemAdminWorkAreaJPanel.populateTree();
            }
        }
    }//GEN-LAST:event_btnGoBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        UserAccountDirectory usersList = this.system.getUserAccountDirectory();
        String role = (String) comboRole.getSelectedItem();
        Patient patient = new Patient(txtName.getText());
        
        boolean userDoNotExists = true;
        ArrayList<UserAccount> users = usersList.getUserAccountList();
        for(UserAccount ua : users)
        {
            if(ua.getUsername().equals(txtUsername.getText()))
                userDoNotExists = false;
        }
        if(txtPassword.getText().equals(txtPasswordConfirmation.getText()))
        {
            if(role.equals("Patient")){
                usersList.createUserAccount(txtUsername.getText(),txtPassword.getText(), patient, new PatientRole());
                UserAccount ua = usersList.getUserAccount(txtUsername.getText());
                Patients patients = new Patients(ua);
                patients.setAddress(txtAddress.getText());
                patients.setPhoneNumber(txtPhoneNumber.getText());
                patients.setCommunity((String)CbxCommunity.getSelectedItem());
                patients.setCity((String)CbxCity.getSelectedItem());
                patients.setGender((String)CbxGender.getSelectedItem());
                patients.setAge(Integer.parseInt(txtAge.getText()));
                patients.setName(txtName.getText());
                System.out.println(patients.getName());
                
                system.getPatientsDirectory().addPatients(patients);
                JOptionPane.showMessageDialog(this, "Added the user successfully");
                this.clearText();
            }
            else if(role.equals("Doctor")){
                System.out.println("i am doctor");
                usersList.createUserAccount(txtUsername.getText(),txtPassword.getText(), patient, new DoctorRole());
                UserAccount ua = usersList.getUserAccount(txtUsername.getText());
                Doctor doctor = new Doctor(ua);
                doctor.setAddress(txtAddress.getText());
                doctor.setPhoneNumber(txtPhoneNumber.getText()); 
                doctor.setStatus("Available");
                doctor.setHospital(txtHospitalName.getText());
                doctor.setName(txtName.getText());
                system.getDoctorDirectory().addDoctor(doctor);
                JOptionPane.showMessageDialog(this, "Added the Dcotor successfully");
                this.clearText();
            }
            else if(role.equals("Community Admin")){
                usersList.createUserAccount(txtUsername.getText(),
                            txtPassword.getText(), patient, new CommunityAdminRole());
                UserAccount ua = usersList.getUserAccount(txtUsername.getText());
                CommunityAdmin communityAdmin = new CommunityAdmin(ua);
                communityAdmin.setAddress(txtAddress.getText());
                communityAdmin.setPhoneNumber(txtPhoneNumber.getText()); 
                communityAdmin.setName(txtName.getText());
                communityAdmin.setCommunity((String)CbxCommunity.getSelectedItem());
                system.getCommunityAdminDirectory().addCommunityAdmin(communityAdmin);
                JOptionPane.showMessageDialog(this, "Added the Community Admin Successfully");
              this.clearText();
            }
            else if(role.equals("System Admin")){
                System.out.println(500);
                usersList.createUserAccount(txtUsername.getText(),
                            txtPassword.getText(), patient, new SystemAdminRole());
                UserAccount ua = usersList.getUserAccount(txtUsername.getText());
                JOptionPane.showMessageDialog(this, "Added the System Admin Successfully");
                this.clearText();
//                SystemAdmin systemAdmin = new SystemAdmin(ua);
//                systemAdmin.setAddress(txtAddress.getText());
//                systemAdmin.setPhoneNumber(txtPhoneNumber.getText()); 
//                systemAdmin.setName(txtName.getText());
//                systemAdmin.setCommunity((String)CbxCommunity.getSelectedItem());
                
                
            }
            else if(role.equals("Hospital Admin")){
                usersList.createUserAccount(txtUsername.getText(),
                            txtPassword.getText(), patient, new HospitalAdminRole());
                UserAccount ua = usersList.getUserAccount(txtUsername.getText());
                HospitalAdmin hospitalAdmin = new HospitalAdmin(ua);
                hospitalAdmin.setAddress(txtAddress.getText());
                hospitalAdmin.setPhoneNumber(txtPhoneNumber.getText()); 
                hospitalAdmin.setName(txtName.getText());
                hospitalAdmin.setHospital(txtHospitalName.getText());
                system.getHospitalAdminDirectory().addHospitalAdmin(hospitalAdmin);
                JOptionPane.showMessageDialog(this, "Added the Hospital Admin Successfully");
                this.clearText();
            }
            }
//            else if(role.equals("Hospital Admin")){
//                usersList.createUserAccount(txtUsername.getText(),
//                            txtPassword.getText(), patient, new HospitalAdminRole());
//                UserAccount ua = usersList.getUserAccount(txtUsername.getText());
//                HospitalAdmin hospitalAdmin = new HospitalAdmin(ua);
//                hospitalAdmin.setAddress(txtAddress.getText());
//                hospitalAdmin.setPhoneNumber(txtPhoneNumber.getText()); 
//                hospitalAdmin.setName(txtName.getText());
//                hospitalAdmin.setHospital(txtHospitalName.getText());
//                JOptionPane.showMessageDialog(this, "Added the Hospital Admin Successfully");
//                this.clearText();
//            }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void comboRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboRoleActionPerformed

    private void CbxCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbxCityActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void CbxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbxGenderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbxCity;
    private javax.swing.JComboBox<String> CbxCommunity;
    private javax.swing.JComboBox<String> CbxGender;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox comboRole;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel lblGender;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtHospitalName;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordConfirmation;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void clearText(){
        JTextField[] textFields = {txtName,txtPassword,txtPasswordConfirmation,
                    txtHospitalName, txtUsername, txtAddress, txtPhoneNumber};
        for(JTextField pk : textFields){
            pk.setText("");
        }
//        txtPassword.setText("");
//        txtPasswordConfirmation.setText("");
        
    }

}
