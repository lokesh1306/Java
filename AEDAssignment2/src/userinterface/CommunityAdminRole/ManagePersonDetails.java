/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CommunityAdminRole;

import Business.Customer.Customer;
import Business.Customer.Hospital;
import Business.Customer.Patients;
import Business.EcoSystem;
import Business.Employee.Patient;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nithin Bharadwaj
 */
public class ManagePersonDetails extends javax.swing.JPanel {

    /**
     * Creates new form UpdateCustomerDetails
     */
    JPanel userProcessContainer;
    EcoSystem system;

    public ManagePersonDetails(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.system = system;
        this.userProcessContainer = userProcessContainer;
        this.populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatientDetails = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtUsername = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lbName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lbUsername = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lbPassword1 = new javax.swing.JLabel();
        lbPassword2 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        lbPassword3 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        CbxCity = new javax.swing.JComboBox<>();
        CbxCommunity = new javax.swing.JComboBox<>();
        CbxGender = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));

        lbTitle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Manage Patient Details");

        tblPatientDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Username", "Gender", "Age", "Address", "City", "Community", "Phone Number"
            }
        ));
        jScrollPane1.setViewportView(tblPatientDetails);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtUsername.setEditable(false);
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });

        btnSubmit.setText("Update");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lbName.setText("Name :");

        lbUsername.setText("Username :");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lbPassword1.setText("Address :");

        lbPassword2.setText("Phone Number :");

        lbPassword3.setText("Age :");

        jLabel10.setText("Community :");

        jLabel11.setText("City :");

        CbxCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Boston", "New York" }));
        CbxCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxCityActionPerformed(evt);
            }
        });

        CbxCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Mission Hill", "Jamaica Plain", "Huntington Avenue", "Bolyston" }));
        CbxCommunity.setPreferredSize(new java.awt.Dimension(124, 23));

        CbxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Male", "Female" }));

        jLabel13.setText("Gender :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(CbxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(CbxGender, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(CbxCity, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbUsername)
                            .addComponent(lbName)
                            .addComponent(lbPassword1)
                            .addComponent(lbPassword2)
                            .addComponent(lbPassword3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(btnDelete)
                        .addGap(72, 72, 72)
                        .addComponent(btnSubmit)
                        .addGap(97, 97, 97)
                        .addComponent(btnView, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTitle)
                    .addComponent(btnBack))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbUsername))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPassword1)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPassword2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPassword3)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CbxCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CbxCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(CbxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnSubmit)
                    .addComponent(btnView))
                .addGap(57, 57, 57))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        Component[] comps = this.userProcessContainer.getComponents();
        for (Component comp : comps) {
            if(comp instanceof CommunityAdminWorkAreaJPanel){
                CommunityAdminWorkAreaJPanel communityAdminWorkAreaJPanel= (CommunityAdminWorkAreaJPanel) comp;
                communityAdminWorkAreaJPanel.populateTree();
            }
        }
    }//GEN-LAST:event_btnBackActionPerformed

    boolean isValidAttribute(String attribute, String reg){
        
        Pattern pat = Pattern.compile(reg);
        Matcher mat = pat.matcher(attribute);
        return mat.matches();
    }
    
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientDetails.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatientDetails.getModel();

        String Namereg = "^[\\p{L} .'-]+$";
        String UserNamereg = "^(?=[a-zA-Z0-9._]{8,20}$)(?!.*[_.]{2})[^_.].*[^_.]$";
        String Hnumreg = "^\\d{1,6}\\040([A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,})$|^\\d{1,6}\\040([A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,})$|^\\d{1,6}\\040([A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,})$";
        String phonereg = "[0-9]{10}";

        String name = txtName.getText();
        String userName = txtUsername.getText();
//        String password = txtpassword.getText();

        String Name = txtName.getText();
        String UserName = txtUsername.getText();
        String Hnum = txtAddress.getText();
        String comm = (String) CbxCommunity.getSelectedItem();
        String city = (String) CbxCity.getSelectedItem();
        int Age;
        String Phone = txtPhoneNumber.getText();

        if (!isValidAttribute(Name, Namereg)) {
            JOptionPane.showMessageDialog(this, "Invalid name input:" + Name, "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (!isValidAttribute(UserName, UserNamereg)) {
            JOptionPane.showMessageDialog(this, "Invalid User Name input:" + UserName, "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (CbxGender.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select Gender", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (!isValidAttribute(Hnum, Hnumreg)) {
            JOptionPane.showMessageDialog(this, "Invalid House number input:" + Hnum, "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (CbxCommunity.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select Community", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (CbxCity.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select City", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            Age = Integer.parseInt(txtAge.getText());

        } catch (NumberFormatException ex) {

            JOptionPane.showMessageDialog(this, "\"Invalid input : Age is not a number\"", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (Age < 0) {
            JOptionPane.showMessageDialog(this, "\"Invalid input : Age cannot be negative\"", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (!isValidAttribute(Phone, phonereg)) {
            JOptionPane.showMessageDialog(this, "Invalid phone input:" + Phone, "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        

        ArrayList<Patients> pats = system.getPatientsDirectory().returnPatientsDetails();
        for (Patients p : pats) {
            if (p.getUserName().equals(userName)) {
//               p.returnUserAccount().setPassword(password);
//               p.setUserPassword(password);
                p.setPhoneNumber(txtPhoneNumber.getText());
                p.setAddress(txtAddress.getText());
                p.setName(name);
                p.setAge(Integer.parseInt(txtAge.getText()));
                p.setGender(String.valueOf(CbxGender.getSelectedItem()));
                p.setCommunity(String.valueOf(CbxCommunity.getSelectedItem()));
                p.setCity(String.valueOf(CbxCity.getSelectedItem()));
                break;
            }

        }
        JOptionPane.showMessageDialog(this, "Details Updated Successfully");
//        txtName.setText("");txtUsername.setText("");txtpassword.setText("");
        txtName.setText("");
        txtUsername.setText("");
        txtAddress.setText("");
        txtPhoneNumber.setText("");
        txtAge.setText("");
        CbxGender.setSelectedIndex(0);
        CbxCommunity.setSelectedIndex(0);
        CbxCity.setSelectedIndex(0);
        populateTable();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientDetails.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatientDetails.getModel();
        Patients selectedPatients = (Patients) model.getValueAt(selectedRowIndex, 0);
        txtName.setText("");
        txtName.setText(selectedPatients.getName());
        txtUsername.setText("");
        txtUsername.setText(selectedPatients.getUserName());
//        txtpassword.setText("");
//        txtpassword.setText(selectedPatients.getUserPassword());
        txtAddress.setText("");
        txtAddress.setText(selectedPatients.getAddress());
        txtPhoneNumber.setText("");
        txtPhoneNumber.setText(String.valueOf(selectedPatients.getPhoneNumber()));
        txtAge.setText("");
        txtAge.setText(String.valueOf(selectedPatients.getAge()));
        CbxGender.setSelectedItem(selectedPatients.getGender());
        CbxCommunity.setSelectedItem(selectedPatients.getCommunity());
        CbxCity.setSelectedItem(selectedPatients.getCity());
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatientDetails.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblPatientDetails.getModel();
        Patients selectedPatients = (Patients) model.getValueAt(selectedRowIndex, 0);
        // First delete the customer from employee

        // And thne delete the userAccount
        this.system.getUserAccountDirectory().deleteUserAccount(
                this.system.getPatientsDirectory().returnPatientsDetails().
                        get(selectedRowIndex).returnUserAccount()
        );
        // finally delete the user from customer directory
        this.system.getPatientsDirectory().deletePatients(selectedPatients);

        JOptionPane.showMessageDialog(this, "Deleted the patient Successfully");
        for (Patients ck : this.system.getPatientsDirectory().returnPatientsDetails()) {
            System.out.println(ck.getName());
        }
        this.populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void CbxCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbxCityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbxCity;
    private javax.swing.JComboBox<String> CbxCommunity;
    private javax.swing.JComboBox<String> CbxGender;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPassword1;
    private javax.swing.JLabel lbPassword2;
    private javax.swing.JLabel lbPassword3;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbUsername;
    private javax.swing.JTable tblPatientDetails;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
//        System.out.println("Inside method to populate Customer table");
        DefaultTableModel model = (DefaultTableModel) tblPatientDetails.getModel();
        model.setRowCount(0);

        for (Patients cust : this.system.getPatientsDirectory().returnPatientsDetails()) {
            System.out.println(cust);
            Object[] row = new Object[8];
            row[0] = cust;
            row[1] = cust.getUserName();
//            row[2] = cust.getUserPassword();
            row[2] = cust.getGender();
            row[3] = cust.getAge();
            row[4] = cust.getAddress();
            row[5] = cust.getCity();
            row[6] = cust.getCommunity();
            row[7] = cust.getPhoneNumber();
            model.addRow(row);
        }
    }

}
