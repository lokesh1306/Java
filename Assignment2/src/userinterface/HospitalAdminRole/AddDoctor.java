/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.HospitalAdminRole;

import Business.CommunityAdmin.CommunityAdmin;

import Business.Hospital.Hospital;
import Business.Hospital.Patients;

import Business.Doctor.Doctor;

import Business.EcoSystem;

import Business.Patient.Patient;
import Business.HospitalAdmin.HospitalAdmin;

import Business.Role.CommunityAdminRole;
import Business.Role.DoctorRole;
import Business.Role.HospitalAdminRole;
import Business.Role.PatientRole;
import Business.Role.SystemAdminRole;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author admin
 */
public class AddDoctor extends javax.swing.JPanel {

    /**
     * Creates new form CreateUser
     */
    JPanel userProcessContainer;
    EcoSystem system;

    public AddDoctor(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.system = system;
        this.userProcessContainer = userProcessContainer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        btnGoBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        txtPasswordConfirmation = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        CbxGender = new javax.swing.JComboBox<>();
        CbxCity = new javax.swing.JComboBox<>();
        txtAge = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        CbxCommunity = new javax.swing.JComboBox<>();

        jPasswordField1.setText("jPasswordField1");

        setBackground(new java.awt.Color(153, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGoBack.setText("Back");
        btnGoBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoBackActionPerformed(evt);
            }
        });
        add(btnGoBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 500, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Create New Doctor");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(138, 19, 299, -1));

        jLabel2.setText("Name :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 62, -1, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 59, 124, -1));

        jLabel3.setText("Username :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 94, -1, -1));
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 94, 124, -1));

        jLabel4.setText("Password :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 138, -1, -1));

        jLabel5.setText("Confirm Password :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 179, -1, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 500, 77, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 135, 124, -1));
        add(txtPasswordConfirmation, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 176, 124, -1));

        jLabel8.setText("House No :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, -1, -1));

        jLabel9.setText("Phone Number :");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(173, 375, -1, -1));

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });
        add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 279, 124, -1));
        add(txtPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 372, 124, -1));

        jLabel10.setText("Community :");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, -1, -1));

        jLabel11.setText("City :");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 350, -1, -1));

        CbxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Male", "Female" }));
        add(CbxGender, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 220, 124, -1));

        CbxCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Boston", "New York" }));
        CbxCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbxCityActionPerformed(evt);
            }
        });
        add(CbxCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 343, 124, -1));
        add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, 124, -1));

        jLabel12.setText("Age :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, -1, -1));

        jLabel13.setText("Gender :");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 220, 60, -1));

        CbxCommunity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- Select --", "Mission Hill", "Jamaica Plain", "Huntington Avenue", "Bolyston" }));
        CbxCommunity.setPreferredSize(new java.awt.Dimension(124, 23));
        add(CbxCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 308, 124, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnGoBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoBackActionPerformed
        // TODO add your handling code here:
        this.userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
        Component[] comps = this.userProcessContainer.getComponents();
        for (Component comp : comps) {
            if (comp instanceof HospitalAdminWorkAreaNewJPanel) {
                HospitalAdminWorkAreaNewJPanel hospitalAdminWorkAreaNewJPanel = (HospitalAdminWorkAreaNewJPanel) comp;
                hospitalAdminWorkAreaNewJPanel.populateTree();
            }
        }
    }//GEN-LAST:event_btnGoBackActionPerformed
    boolean isValidAttribute(String attribute, String reg) {

        Pattern pat = Pattern.compile(reg);
        Matcher mat = pat.matcher(attribute);
        return mat.matches();
    }

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        UserAccountDirectory usersList = this.system.getUserAccountDirectory();

        Patient patient = new Patient(txtName.getText());
        String Namereg = "^[\\p{L} .'-]+$";
        String UserNamereg = "^(?=[a-zA-Z0-9._]{8,20}$)(?!.*[_.]{2})[^_.].*[^_.]$";
        String Hnumreg = "^\\d{1,6}\\040([A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,})$|^\\d{1,6}\\040([A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,})$|^\\d{1,6}\\040([A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,}\\040[A-Z]{1}[a-z]{1,})$";
        String phonereg = "[0-9]{10}";
        String passreg = "^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$";
//        At least one upper case English letter, (?=.*?[A-Z])
//        At least one lower case English letter, (?=.*?[a-z])
//        At least one digit, (?=.*?[0-9])
//        At least one special character, (?=.*?[#?!@$%^&*-])
//        Minimum eight in length .{8,} (with the anchors)

        String Name = txtName.getText();
        String UserName = txtUsername.getText();
        String password = txtPassword.getText();
        String confirmPassword = txtPasswordConfirmation.getText();
        String Gender = (String) CbxGender.getSelectedItem();
        String Hnum = txtAddress.getText();
        String comm = (String) CbxCommunity.getSelectedItem();
        String city = (String) CbxCity.getSelectedItem();
        int Age;
        String Phone = txtPhoneNumber.getText();

        if (!isValidAttribute(Name, Namereg)) {
            JOptionPane.showMessageDialog(this, "Invalid name input:" + Name, "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (!isValidAttribute(UserName, UserNamereg)) {
            JOptionPane.showMessageDialog(this, "Invalid User Name input:" + UserName, "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (!isValidAttribute(password, passreg)) {
            JOptionPane.showMessageDialog(this, "Invalid password", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (!password.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(this, "Password mismatch", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (CbxGender.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select Gender", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (!isValidAttribute(Hnum, Hnumreg)) {
            JOptionPane.showMessageDialog(this, "Invalid House number input:" + Hnum, "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (CbxCommunity.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select Community", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (CbxCity.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select City", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Age = Integer.parseInt(txtAge.getText());

        } catch (NumberFormatException ex) {

            JOptionPane.showMessageDialog(this, "\"Invalid input : Age is not a number\"", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (Age < 0) {
            JOptionPane.showMessageDialog(this, "\"Invalid input : Age cannot be negative\"", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (!isValidAttribute(Phone, phonereg)) {
            JOptionPane.showMessageDialog(this, "Invalid phone input:" + Phone, "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean usernameExists = false;
        ArrayList<UserAccount> users = usersList.getUserAccountList();
        for (UserAccount ua : users) {
            if (ua.getUsername().equals(txtUsername.getText())) {
                usernameExists = true;
            }

        }
        if (usernameExists) {
            JOptionPane.showMessageDialog(this, "user name already exists in the directory", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        usersList.createUserAccount(txtUsername.getText(), txtPassword.getText(), patient, new DoctorRole());
        UserAccount ua = usersList.getUserAccount(txtUsername.getText());
        Doctor doctor = new Doctor(ua);
        doctor.setAddress(txtAddress.getText());
        doctor.setPhoneNumber(txtPhoneNumber.getText());
        doctor.setStatus("Available");
        String loginUserName = system.getLoginUserName();
        for(HospitalAdmin had : system.getHospitalAdminDirectory().returnHospitalAdminDetails()){
            if(had.getUserName().equals(loginUserName)){
                doctor.setHospital(had.getHospital());
            }
        
        }
        doctor.setName(txtName.getText());
        doctor.setCommunity((String) CbxCommunity.getSelectedItem());
        doctor.setCity((String) CbxCity.getSelectedItem());
        doctor.setGender((String) CbxGender.getSelectedItem());
        doctor.setAge(Integer.parseInt(txtAge.getText()));
        system.getDoctorDirectory().addDoctor(doctor);
        JOptionPane.showMessageDialog(this, "Added the doctor successfully");
        System.out.println(system.getHospitalDirectory().returnHospitalDetails());
        for (Hospital H : system.getHospitalDirectory().returnHospitalDetails()) {
           
            System.out.println(2000);
            if (H.getName().equals(doctor.getHospital())) {
                H.addDoctor(doctor);
                System.out.println(1000);
                break;
            }
        }
        this.clearText();
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void CbxCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbxCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CbxCityActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbxCity;
    private javax.swing.JComboBox<String> CbxCommunity;
    private javax.swing.JComboBox<String> CbxGender;
    private javax.swing.JButton btnGoBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPasswordConfirmation;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void clearText() {
        JTextField[] textFields = {txtName, txtPassword, txtPasswordConfirmation,
             txtUsername, txtAddress, txtPhoneNumber, txtAge};
        for (JTextField pk : textFields) {
            pk.setText("");
        }
        CbxGender.setSelectedIndex(0);
        CbxCommunity.setSelectedIndex(0);
        CbxCity.setSelectedIndex(0);
        
//        txtPassword.setText("");
//        txtPasswordConfirmation.setText("");

    }

}
